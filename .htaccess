# CONFIGURACIÓN SIMPLIFICADA PARA HOSTINGER + REACT
RewriteEngine On
RewriteBase /

# IMPORTANTE: Permitir acceso directo a archivos PHP en /api/
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^api/.*\.php$ - [L]

# Redirigir rutas de API que NO son archivos a index.php CON LA RUTA ORIGINAL
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^api/(.*)$ api/index.php?route=$1 [L,QSA]

# Servir archivos estáticos directamente
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^.*$ - [L]

# Redirigir todo lo demás a index.html (React Router) - EXCEPTO API
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_URI} !^/api/
RewriteRule ^ index.html [L]

# TIPOS MIME CRÍTICOS PARA HOSTINGER
AddType application/javascript .js
AddType application/javascript .mjs
AddType application/javascript .jsx
AddType text/css .css
AddType application/json .json

# Fonts
AddType font/woff2 .woff2
AddType font/woff .woff

# HEADERS ESPECÍFICOS PARA ARCHIVOS JS
<FilesMatch "\.(js|mjs|jsx)$">
  Header always set Content-Type "application/javascript; charset=utf-8"
  Header always set X-Content-Type-Options "nosniff"
</FilesMatch>

# CONFIGURACIÓN PARA ARCHIVOS COMPILADOS
<FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2)$">
  Header set Cache-Control "public, max-age=31536000"
  Header set Access-Control-Allow-Origin "*"
</FilesMatch>

# FORZAR TIPOS MIME (CRÍTICO PARA HOSTINGER)
<Files "*.js">
  ForceType application/javascript
</Files>

<Files "*.css">
  ForceType text/css
</Files>

# CORS para desarrollo
Header always set Access-Control-Allow-Origin "*"
Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
<FilesMatch "\.(php)$">
    SetHandler application/x-httpd-php
</FilesMatch>